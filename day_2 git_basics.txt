 ðŸ“Œ Git Basics  

 ðŸ”¹ What is Git?  
Git is a distributed version control system that helps track changes in code, collaborate with teams, and manage project history effectively.  

ðŸ”¹ Why use Git?  
- Saves the complete history of a project.  
- Simplifies collaboration in software development.  
- Allows easy rollback to previous versions.  
- Works with both local and remote repositories.  

 ðŸ”¹ Essential Git Commands  

 ðŸ”¹ Initialize a Git repository  
- `git init` â†’ Creates a new local repository  

 ðŸ”¹ Clone a repository  
- `git clone <URL>` â†’ Copies a remote repository to your computer  

 ðŸ”¹ Check status  
- `git status` â†’ Shows modified, staged, or untracked files  

 ðŸ”¹ Add changes  
- `git add .` â†’ Adds all changes to the staging area  

 ðŸ”¹ Commit changes  
- `git commit -m "Your message"` â†’ Saves changes with a message  

ðŸ”¹ Push to GitHub  
- `git push origin main` â†’ Uploads local changes to the remote repository  

 ðŸ”¹ Pull the latest changes  
- `git pull origin main` â†’ Fetches and merges changes from the remote repository  

 ðŸ”¹ View commit history  
- `git log` â†’ Displays previous commits  

 ðŸ”¹ What I Learned Today  
âœ… **Git** is a powerful tool for managing code.  
âœ… It helps **track changes** and **maintain project history**.  
âœ… Git works with **both local and remote repositories**.  
âœ… The most important commands include `git init`, `git add`, `git commit`, `git push`, and `git pull`.  
âœ… **GitHub** is a platform for storing and collaborating on Git repositories.  
